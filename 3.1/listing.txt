C:\Users\alexk>docker cp c:\temp\vim d9dcff3425e11f45526096ebe7cb7202e47e0d5f030abdf7d489f2812ba2bf52:\vim
C:\Users\alexk>docker exec -it d9dcff3425e11f45526096ebe7cb7202e47e0d5f030abdf7d489f2812ba2bf52 bash
root@d9dcff3425e1:/# ls
bin   dev            etc     hadoop-data  lib    media  opt   root  run.sh  srv  tmp   usr  vim
boot  entrypoint.sh  hadoop  home         lib64  mnt    proc  run   sbin    sys  user  var  

# в первую очередь нам нужно перенести их в папку нашего пользователя именно на HDFS
root@d9dcff3425e1:/# hdfs dfs -mkdir /user/admin/vim/
root@d9dcff3425e1:/# hdfs dfs -put /vim/* /user/admin/vim/

# После того, как файлы окажутся на HDFS попробуйте выполнить команду, которая выводит содержимое папки. Особенно обратите внимание на права доступа к вашим файлам.
root@d9dcff3425e1:/# hdfs dfs -ls /user/admin/vim
Found 5 items
drwxr-xr-x   - root admin          0 2023-01-04 14:52 /user/admin/vim/vim
-rw-r--r--   3 root admin     697960 2023-01-04 14:52 /user/admin/vim/vim1.txt
-rw-r--r--   3 root admin     736519 2023-01-04 14:52 /user/admin/vim/vim2.txt
-rw-r--r--   3 root admin     770324 2023-01-04 14:52 /user/admin/vim/vim3.txt
-rw-r--r--   3 root admin     843205 2023-01-04 14:52 /user/admin/vim/vim4.txt

# Далее сожмите все 4 тома в 1 файл.
root@d9dcff3425e1:/# hdfs dfs -getmerge /user/admin/vim/ vim.txt
root@d9dcff3425e1:/# hdfs dfs -put vim.txt /user/admin/
root@d9dcff3425e1:/# hdfs dfs -ls /user/admin/
Found 2 items
drwxr-xr-x   - root admin          0 2023-01-04 14:52 /user/admin/vim
-rw-r--r--   3 root admin    3048008 2023-01-04 15:03 /user/admin/vim.txt

# Теперь давайте изменим права доступа к нашему файлу. Чтобы с нашим файлом могли взаимодействовать коллеги, установите режим доступа, который дает полный доступ для владельца файла, а для сторонних пользователей возможность читать и выполнять.
root@d9dcff3425e1:/# hdfs dfs -chmod 755 /user/admin/vim.txt

# Попробуйте заново использовать команду для вывода содержимого папки и обратите внимание как изменились права доступа к файлу.
root@d9dcff3425e1:/# hdfs dfs -ls /user/admin/
Found 2 items
drwxr-xr-x   - root admin          0 2023-01-04 14:52 /user/admin/vim
-rwxr-xr-x   3 root admin    3048008 2023-01-04 15:03 /user/admin/vim.txt

# Теперь попробуем вывести на экран информацию о том, сколько места на диске занимает наш файл. Желательно, чтобы размер файла был удобночитаемым.
root@d9dcff3425e1:/# hdfs dfs -du -h /user/admin/vim.txt
2.9 M  /user/admin/vim.txt

# На экране вы можете заметить 2 числа. Первое число – это фактический размер файла, а второе – это занимаемое файлом место на диске с учетом репликации. По умолчанию в данной версии HDFS эти числа будут одинаковы – это означает, что никакой репликации нет – нас это не очень устраивает, мы хотели бы, чтобы у наших файлов существовали резервные копии, поэтому напишите команду, которая изменит фактор репликации на 2.
root@d9dcff3425e1:/# hdfs dfs -setrep 2 /user/admin/vim.txt
Replication 2 set: /user/admin/vim.txt
# Вообще говоря "это означает, что никакой репликации нет" - это не верно. Как видно из -ls - фактор репликации по умолчанию равен 3 (см. справку по ls - numberOfReplicas)
root@d9dcff3425e1:/# hdfs dfs -help ls
-ls [-C] [-d] [-h] [-q] [-R] [-t] [-S] [-r] [-u] [<path> ...] :
  List the contents that match the specified file pattern. If path is not
  specified, the contents of /user/<currentUser> will be listed. For a directory a
  list of its direct children is returned (unless -d option is specified).

  Directory entries are of the form:
        permissions - userId groupId sizeOfDirectory(in bytes)
  modificationDate(yyyy-MM-dd HH:mm) directoryName

  and file entries are of the form:
        permissions numberOfReplicas userId groupId sizeOfFile(in bytes)
  modificationDate(yyyy-MM-dd HH:mm) fileName

# Повторите команду, которая выводит информацию о том, какое место на диске занимает файл и убедитесь, что изменения произошли.
root@d9dcff3425e1:/# hdfs dfs -du -h /user/admin/vim.txt
2.9 M  /user/admin/vim.txt
# Какой бы фактор репликации я не ставил, ничего не меняется. Если учесть, что у нас только одна дата нода, то наверное так и должно быть

# Напишите команду, которая подсчитывает количество строк в вашем файле
C:\Users\alexk>docker exec -it d09d5dbfa8f90476dd95bb6e3388b8239f199f80c82a6f0616e1215c47fe337e bash

root@d09d5dbfa8f9:/# spark/bin/spark-shell

scala> val vim = spark.read.textFile("/user/admin/vim.txt")
vim: org.apache.spark.sql.Dataset[String] = [value: string]

scala> vim.count()
res5: Long = 10272
